SELECT * , user_game.id AS ugid
FROM users 
INNER JOIN avatars ON users.avatar_id = avatars.id 
INNER JOIN user_game ON users.id = user_game.user_id
INNER JOIN games ON user_game.game_id = games.id
WHERE users.id = 1;

How to implement followee_follower?

UPDATE users
SET avatar_id = 9
WHERE id = 1;

UPDATE users
SET initials = 'KKK'
WHERE id = 1;

SELECT count(game_id) 
FROM users 
INNER JOIN avatars ON users.avatar_id = avatars.id 
INNER JOIN user_game ON users.id = user_game.user_id
INNER JOIN games ON user_game.game_id = games.id
WHERE users.id = 1;

gets the guesses
SELECT users.id, user_game.id, row1guess, row2guess
FROM users 
INNER JOIN user_game ON users.id = user_game.user_id
INNER JOIN games ON user_game.game_id = games.id
INNER JOIN guesses ON user_game.id = guesses.user_game_id
WHERE users.id = 1;

UPDATE guesses SET row3guess = 'HAPPY', row3timestamp = NOW() WHERE id = 1;

SELECT user_game.id
FROM users 
INNER JOIN avatars ON users.avatar_id = avatars.id 
INNER JOIN user_game ON users.id = user_game.user_id
INNER JOIN games ON user_game.game_id = games.id
WHERE users.id = 1;

game_id + user_id -> user_game_id

SELECT *
from user_game
WHERE user_id = 2 AND game_id = 2;

INSERT INTO guesses (user_game_id, row1Guess, row1Timestamp) VALUES (3, 'HOUSE', NOW());

select id, user_game_id, row1guess, row1timestamp from guesses;

INSERT INTO user_game (user_id, game_id, started_on) VALUES (2,1, NOW());
SELECT id FROM user_game ORDER BY id desc LIMIT 1; <-- last item
INSERT INTO guesses (user_game_id) VALUES (99); <-- not 99, the last item

select * from user_game where user_id = 1 AND game_id = 1;

UPDATE user_game SET turns_taken = 4, won_on = NOW() WHERE id = 1;

INSERT INTO user_game (user_id, game_id, turns_taken, won_on, started_on) VALUES (1,9,1, NOW(), NOW());


INSERT INTO users (date_started, player_id) VALUES (NOW(), 'kevin');


  // const [user, setUser] = useState([]);

  // const getUser = () => {
  //   axios('http://localhost:5001/users/1')
  //     .then(res => {
  //       // console.log("RES USER: ", res.data)
  //       setUser(res.data)
  //     })
  // }


  // let refresh = false;

  // const newUser = () => {

  //   if (refresh) {

  //     axios.put('http://localhost:5001/new_users/kevin')
  //       .then(res => {
  //         // console.log("RES USER: ", res.data)
  //         console.log("I am user", res.data)
  //         setUser(res.data)
  //         refresh = false;
  //       })
  //   }
  // }

  // useEffect(() => {
  //   getUser()
  //   newUser()
  // }, [])

  {/* <button onClick={() => { newUser(); refresh = true; }}>new</button> */}
  <GameTitle rightSidebar={rightSidebar} setRightSidebar={setRightSidebar} leftSidebar={leftSidebar} setLeftSidebar={setLeftSidebar} user={user} />